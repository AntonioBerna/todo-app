{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"To Do List Tool With PostgreSQL Database in C","text":"<p>This is a simple To Do List tool written in C that uses a PostgreSQL database to store the tasks. It allows you to add, remove, and view tasks in a terminal interface.</p> <p>You can explore the documentation following requirements and usage sections.</p>"},{"location":"requirements/","title":"Requirements","text":""},{"location":"requirements/#how-to-install-postgresql","title":"How to install PostgreSQL","text":"<p>If you are on <code>Arch Linux</code> you can use the following command:</p> <pre><code>sudo pacman -S postgresql\n</code></pre> <p>to install it, but if you are on other <code>Linux</code> distributions just change the <code>Package Manager</code>. Instead, if you are on <code>macOS</code> or <code>Windows</code>, go to the official <code>PostgreSQL</code> website.</p> <p>Note</p> <p>If you have never used <code>PostgreSQL</code> on <code>Linux</code> I suggest you follow this guide.</p> <p>Warning</p> <p>If you use <code>macOS</code> or <code>Windows</code> you must modify the <code>Makefile</code> file to adapt it to your operating system.</p> <p>After the installation of <code>PostgreSQL</code> you need to use the following commands:</p> <pre><code>sudo -u postgres initdb -D /var/lib/postgres/data\nsudo mkdir -p /var/lib/postgres/data\nsudo chown postgres:postgres /var/lib/postgres/data\n</code></pre> <p>to initialize the database and create the necessary directories. Then you can use the following command to start the <code>PostgreSQL</code> service:</p> <pre><code>sudo systemctl start postgresql\n</code></pre> <p>and to enable it at startup use the following command:</p> <pre><code>sudo systemctl enable postgresql\n</code></pre>"},{"location":"requirements/#how-to-create-a-database","title":"How to create a database","text":"<p>Once you have downloaded <code>PostgreSQL</code> you need to create the <code>todolist</code> database. Open a terminal and write:</p> <pre><code>sudo -i -u postgres\n</code></pre> <p>this command allows you to change your computer user by selecting the <code>postgres</code> user. Now use the following command to create a database called <code>todolist</code>:</p> <pre><code>createdb todolist\n</code></pre> <p>Now run the command:</p> <pre><code>psql\n</code></pre> <p>you will get something like this:</p> <pre><code>psql (16.2)\nType \"help\" for help.\n\npostgres=#\n</code></pre> <p>then write:</p> <p><pre><code>\\c todolist\n</code></pre> you should get a message similar to this:</p> <pre><code>You are now connected to database \"todolist\" as user \"postgres\".\n</code></pre> <p>Now if you open the <code>src/table.sql</code> file you will find this code inside:</p> <pre><code>-- Use the following command to create a tasks table on todolist database\nCREATE TABLE tasks (\n    id SERIAL PRIMARY KEY,\n    description TEXT NOT NULL\n);\n</code></pre> <p>compact this code as follows:</p> <pre><code>CREATE TABLE tasks (id SERIAL PRIMARY KEY, description TEXT NOT NULL);\n</code></pre> <p>and write it immediately after <code>todolist=#</code> and you should get this message:</p> <pre><code>CREATE TABLE\n</code></pre> <p>Now use the following <code>SQL</code> code to see the <code>description</code> and <code>id</code> columns that are part of the <code>tasks</code> table:</p> <pre><code>SELECT * FROM tasks;\n</code></pre> <p>and in particular you should get something similar to this:</p> <pre><code>id | description \n----+-------------\n(0 rows)\n</code></pre> <p>Now that you have successfully created the <code>todolist</code> database and created a <code>tasks</code> table to place the information in, you can exit <code>psql</code> using the <code>\\q</code> command and then you can switch back to the main user using the <code>exit</code> command.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#step-by-step-guide","title":"step-by-step guide","text":"<p>If you have performed the previous steps without problems you are ready to use my project. Then clone the repository to your computer using the following command:</p> <pre><code>git clone https://github.com/AntonioBerna/todo-app.git\n</code></pre> <p>For personal security reasons, it is good practice to save your access credentials in the system's environment variables. Then using the <code>touch</code> command we create a <code>setenv.sh</code> file which must contain the following code:</p> <pre><code>#!/bin/bash\n\nexport DATABASE=todolist\nexport USERNAME=postgres\nexport PASSWORD= # please complete this\nexport PORT= # please complete this\necho \"Set environment variables for DATABASE, USERNAME, PASSWORD, and PORT.\"\n</code></pre> <p>in particular the <code>PASSWORD</code> should be the login password of your computer, while to find out which connection <code>PORT</code> is you can use the following command:</p> <pre><code>SELECT setting FROM pg_settings WHERE name = 'port';\n</code></pre> <p>Warning</p> <p>To use the previous command you need to log back into <code>psql</code> and then use the <code>sudo -i -u postgres</code> command and then the <code>psql</code> command.</p> <p>once the <code>setenv.sh</code> file is completed you can use the following commands:</p> <pre><code>chmod +x setenv.sh\nsource setenv.sh\n</code></pre> <p>to apply those environment variables to the shell currently in use.</p> <p>Once you have set the environment variables you will need to compile the program. Then you can use the following command:</p> <pre><code>make\n</code></pre> <p>To test the program we can use the following command:</p> <pre><code>./bin/todo\n</code></pre> <p>so as to obtain:</p> <pre><code>Usage: ./bin/todo [add|rm|ls] [description|id]\n</code></pre> <p>To remove the program from your computer you can use the following command:</p> <pre><code>make clean\n</code></pre>"},{"location":"usage/#add-tasks","title":"Add tasks","text":"<p>Input:</p> <pre><code>./bin/todo add homework \"go to the toilet\"\n</code></pre> <p>Output:</p> <pre><code>Adding of item \"homework\" successful\nAdding of item \"go to the toilet\" successful\n</code></pre> <p>Note</p> <p>Double quotes <code>\" \"</code> are optional for single words like coffee, chocolate, tea, homework, and so on.</p>"},{"location":"usage/#print-tasks","title":"Print tasks","text":"<p>Input:</p> <pre><code>./bin/todo ls\n</code></pre> <p>Output:</p> <pre><code>Todo list:\n(1) homework\n(2) go to the toilet\n</code></pre>"},{"location":"usage/#delete-tasks","title":"Delete tasks","text":"<p>Input:</p> <pre><code>./bin/todo rm 1 2\n</code></pre> <p>Output:</p> <pre><code>Deletion of item 1 successful\nDeletion of item 2 successful\n</code></pre>"}]}